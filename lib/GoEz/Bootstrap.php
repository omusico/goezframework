<?php/** * 抽象控制類別 * */class GoEz_Bootstrap{    /**     * 設定     *     * @var array     */    protected $_config = array();    /**     * Router     *     * @var GoEz_Router     */    protected $_router = null;    /**     * Request     *     * @var GoEz_Request     */    protected $_request = null;    /**     * View     *     * @var GoEz_View     */    protected $_view = null;    /**     * 執行動作     *     */    public final function run($configFile, $env)    {        $bootstrap = new self($configFile, $env);        $bootstrap->_dispatch();    }    /**     * 不可初始化     *     */    private function __construct($configFile, $env)    {        $this->_loadConfig($configFile, $env);        $this->_initRouter();        $this->_initRequest();        $this->_initView();    }    /**     * 載入網址設定檔     *     * @param string $configFile     */    protected function _loadConfig($configFile, $env)    {        $ini = new GoEz_Config($configFile);        $config = $ini->toArray();        $this->_config = $config[$env];        if (!isset($this->_config['bootstrap'])) {            $this->_config['bootstrap'] = array();        }        if (!isset($this->_config['view'])) {            $this->_config['view'] = array();        }    }    /**     * 初始化 Router     *     */    protected function _initRouter()    {        $routerName = $this->_getClassInConfig('router', 'GoEz_Router_Rewrite');        $this->_router = new $routerName();    }    /**     * 初始化 Request     *     */    protected function _initRequest()    {        $requestName = $this->_getClassInConfig('request', 'GoEz_Request');        $this->_request = new $requestName();    }    /**     * 初始化 View     *     */    protected function _initView()    {        $this->_view = new GoEz_View($this->_config['view']);        $this->_view->setFrontendVars('baseUrl', $this->_request->getBaseUrl());    }    /**     * 使用者定義的 Controller     *     * @var GoEz_Controller     */    protected $_userController = null;    /**     * Dispatch     *     */    protected function _dispatch()    {        $this->_userController = $this->_getUserController();        $this->_userController->setConfig($this->_config);        $this->_userController->setRequest($this->_request);        $this->_userController->setView($this->_view);        $this->_userController->init();        $this->_userController->beforeDispatch();        $this->_userController->{$this->_getUserAction()}();        $this->_userController->afterDispatch();    }    /**     * 取得使用者定義的控制器     *     * @return GoEz_Controller     * @throws Excetion     */    protected function _getUserController()    {        $userNamespace = 'My_';        if (array_key_exists('userNamespace', $this->_config['bootstrap'])) {            $userNamespace = rtrim(ucfirst($this->_config['bootstrap']['userNamespace']), '_') . '_';        }        $controllerName = $userNamespace . ucfirst($this->_router->getController()) . 'Controller';        try {            return new $controllerName();        } catch (Exception $e) {            throw new Exception("Controller \"$controllerName\" 不存在。");        }    }    /**     * 取得使用者定義的動作     *     * @return string     * @throws Excetion     */    protected function _getUserAction()    {        $action = $this->_router->getAction() . 'Action';        if (method_exists($this->_userController, $action)) {            return $action;        } else {            $controllerName = get_class($this->_userController);            throw new Exception("Action \"$controllerName::$action\" 不存在。");        }    }    /**     * 載入類別名稱     *     * @param string $key     * @param string $defaultClassName     * @return string     * @throws Excetion     */    private function _getClassInConfig($key, $defaultClassName)    {        $className = $defaultClassName;        if (array_key_exists($key, $this->_config['bootstrap'])) {            $className = trim($this->_config['bootstrap'][$key]);            if (!class_exists($className, true)) {                throw new Exception("\"$className\" 不存在。");            }        }        return $className;    }}